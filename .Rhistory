world_filtered <- world %>%
filter(name %in% countries_to_show) %>%
left_join(data_filtered, by = c("name" = "Kraj"))
# Krok 6: Rysowanie mapy (bez etykiet i bez Rosji)
ggplot(world_filtered) +
geom_sf(aes(fill = PKB), color = 'black') +  # Kolorowanie krajów na podstawie PKB
coord_sf(crs = st_crs(3035),                   # Ustawienie układu współrzędnych
xlim = c(2000000, 6200000),
ylim = c(1500000, 5500000)) +         # Zakres widocznej części mapy
scale_fill_viridis_c(option = "C", na.value = 'white') +
scale_fill_viridis_c(option = "C", na.value = 'white', # Kolor biały dla brakujących danych
name = "Wartość PKB",    # Tytuł legendy
labels = scales::label_comma()) + # Skala kolorów
theme_minimal() +  # Minimalistyczny wygląd
labs(title = "Mapa PKB w krajach Europy w 2020 roku",
subtitle = "PKB") +
theme(axis.text = element_blank(),   # Usunięcie napisów osi
axis.ticks = element_blank(),  # Usunięcie ticków osi
axis.title = element_blank())  # Usunięcie tytułów osi
# Obliczanie średniego PKB UE w latach 1985-2005
data_avg_95 <- data %>%
filter(
case_when(
Rok <= 1995 ~ Kraj %in% c("Belgium", "France", "Netherlands", "Luxembourg",
"Germany", "Italy", "Greece", "Spain", "Portugal"),
Rok > 1995 ~ Kraj %in% c("Belgium", "France", "Netherlands", "Luxembourg",
"Germany", "Italy", "Greece", "Spain", "Portugal",
"Austria", "Finland", "Sweden")
)
) %>%
group_by(Rok) %>%
summarise(średnie_PKB_UE = mean(PKB, na.rm = TRUE))
# Przygotowanie danych na konkretne państwa w latach 1985-2005
data_ue_95 <- data %>%
filter(Kraj %in% c("Austria", "Finland", "Sweden"),
Rok >= 1985, Rok <= 2005) %>%
mutate(
Okres = case_when(
Rok <= 1995 ~ "Przed 1995",
Rok > 1995 ~ "Po 1995"
),
Kraj = recode(
Kraj,
"Austria" = "Austria",
"Finland" = "Finlandia",
"Sweden" = "Szwecja")
)
# Wykres
ggplot(data_ue_95, aes(x = Rok, y = PKB, color = Kraj, linetype = Okres)) +
geom_line(
data = data_avg_95,
aes(x = Rok, y = średnie_PKB_UE, color = "Średnia w UE"),
size = 0.7,
linetype = "dashed"
) +
geom_point() +
#geom_line() +
#geom_smooth(method = "lm", se = TRUE) + #regresja liniowa
scale_color_manual(
values = c(
"Austria" = "orange",
"Finlandia" = "purple",
"Szwecja" = "green",
"Średnia w UE" = "blue"
),
breaks = c("Austria", "Finlandia", "Szwecja", "Średnia w UE"),
name = "Legenda"
) +
labs(
title = "Porównanie PKB w latach 1985 - 2005",
x = "Rok",
y = "PKB (USD per capita)",
color = "Kraj",
linetype = "Okres"
) +
theme_minimal() +
scale_x_continuous(
limits = c(1985, 2005),
breaks = seq(1985, 2005, 2),
labels = function(x) format(x, digits = 4)
) +
geom_vline(xintercept = 1995, linetype = "dotdash", color = "black") +
theme(axis.text.x = element_text(size = 8))
# Obliczanie średniej szybkości wzrostu PKB i odchyleń st.
tempo_pkb_95 <- data_ue_95 %>%
filter((Kraj == "Austria" & Rok >= 1994 & Rok <= 2005) |
(Kraj != "Austria" & Rok >= 1985 & Rok <= 2005)) %>%
group_by(Kraj, Okres) %>%
arrange(Rok) %>%
summarize(
y1 = first(PKB),
yn = last(PKB),
n = n_distinct(Rok),
średnie_tempo = ((yn / y1)^(1 / (n - 1)) - 1),
roczne_tempa = list(((PKB / lag(PKB)) - 1)[-1]),
sd_tempo = sd(unlist(roczne_tempa), na.rm = TRUE),
.groups = 'drop'
) %>%
mutate(
"Średnie tempo wzrostu w %" = średnie_tempo * 100,
"STD wzrostu rocznego" = sd_tempo
) %>%
select(Kraj, Okres, "Średnie tempo wzrostu w %", "STD wzrostu rocznego")
print(tempo_pkb_95)
# t-test porównania średnich PKB przed i po 1995 roku
t_test_95 <- data_ue_95 %>%
group_by(Kraj) %>%
do(tidy(t.test(PKB ~ Okres, data = .))) %>%
select(Kraj, estimate, p.value, conf.low, conf.high) %>%
rename(
"Różnica średnich" = estimate,
"p-wartość" = p.value,
"Dolna gr" = conf.low,
"Górna gr" = conf.high)
print(t_test_95)
# Obliczanie średniego PKB UE w latach 1994-2014
data_avg_04 <- data %>%
filter(Rok >= 1994, Rok <= 2014) %>%
filter(
case_when(
Rok <= 1995 ~ Kraj %in% c("Belgium", "France", "Netherlands", "Luxembourg",
"Germany", "Italy", "Greece", "Spain", "Portugal"),
Rok <= 2003 ~ Kraj %in% c("Belgium", "France", "Netherlands", "Luxembourg",
"Germany", "Italy", "Greece", "Spain", "Portugal",
"Austria", "Finland", "Sweden"),
Rok >= 2004 ~ Kraj %in% c("Belgium", "France", "Netherlands", "Luxembourg",
"Germany", "Italy", "Greece", "Spain", "Portugal",
"Austria", "Finland", "Sweden","Czech Republic",
"Estonia", "Lithuania", "Latvia", "Malta",
"Poland", "Slovakia", "Slovenia", "Hungary"),
Rok >= 2007 ~ Kraj %in% c("Belgium", "France", "Netherlands", "Luxembourg",
"Germany", "Italy", "Greece", "Spain", "Portugal",
"Austria", "Finland", "Sweden","Czech Republic",
"Estonia", "Lithuania", "Latvia", "Malta",
"Poland", "Slovakia", "Slovenia", "Hungary",
"Romania", "Bulgaria")
)
) %>%
group_by(Rok) %>%
summarise(średnie_PKB_UE_04 = mean(PKB, na.rm = TRUE))
# Przygotowanie danych na konkretne państwa
data_ue_04 <- data %>%
filter(Kraj %in% c("Poland", "Lithuania", "Slovenia", "Hungary"),
Rok >= 1994, Rok <= 2014) %>%
mutate(
Okres = case_when(
Rok <= 2004 ~ "Przed 2004 rokiem",
Rok > 2004 ~ "Po 2004 roku"
),
Kraj = recode(
Kraj,
"Poland" = "Polska",
"Lithuania" = "Litwa",
"Slovenia" = "Słowenia",
"Hungary" = "Węgry")
)
# Wykres
ggplot(data_ue_04, aes(x = Rok, y = PKB, color = Kraj, linetype = Okres)) +
geom_line(
data = data_avg_04,
aes(x = Rok, y = średnie_PKB_UE_04, color = "Średnia w UE"),
size = 0.7,
linetype = "dashed"
) +
geom_point() +
#geom_line() +
#geom_smooth(method = "lm", se = TRUE) + #regresja liniowa
scale_color_manual(
values = c(
"Słowenia" = "orange",
"Węgry" = "purple",
"Litwa" = "green",
"Polska" = "red",
"Średnia PKB w UE" = "blue"
),
breaks = c("Średnia w UE", "Słowenia", "Węgry", "Litwa", "Polska"),
name = "Legenda"
) +
labs(
title = "Porównanie PKB w latach 1994 - 2014",
x = "Rok",
y = "PKB (USD per capita)",
color = "Kraj",
linetype = "Okres"
) +
theme_minimal() +
scale_x_continuous(
limits = c(1994, 2014),
breaks = seq(1994, 2014, 2),
labels = function(x) format(x, digits = 4)
) +
geom_vline(xintercept = 2004, linetype = "dotdash", color = "black") +
theme(axis.text.x = element_text(size = 8))
# Obliczanie średniej szybkości wzrostu PKB i odchyleń st.
tempo_pkb_04 <- data_ue_04 %>%
filter(Rok >= 2000, Rok <= 2008) %>%
mutate(
Okres = case_when(
Rok <= 2004 ~ "Przed 2004",
Rok >= 2004 ~ "Po 2004"
)
) %>%
group_by(Kraj, Okres) %>%
arrange(Rok) %>%
summarize(
y1 = first(PKB),
yn = last(PKB),
n = n_distinct(Rok),
średnie_tempo = ((yn / y1)^(1 / (n - 1)) - 1),
roczne_tempa = list(((PKB / lag(PKB)) - 1)[-1]),
sd_tempo = sd(unlist(roczne_tempa), na.rm = TRUE),
.groups = 'drop'
) %>%
mutate(
"Średnie tempo wzrostu w %" = średnie_tempo * 100,
"STD wzrostu rocznego" = sd_tempo
) %>%
select(Kraj, Okres, "Średnie tempo wzrostu w %", "STD wzrostu rocznego")
print(tempo_pkb_04)
# t-test porównania średnich PKB przed i po
t_test_04 <- data_ue_04 %>%
group_by(Kraj) %>%
do(tidy(t.test(PKB ~ Okres, data = .))) %>%
select(Kraj, estimate, p.value, conf.low, conf.high) %>%
rename(
"Różnica średnich" = estimate,
"p-wartość" = p.value,
"Dolna gr" = conf.low,
"Górna gr" = conf.high)
print(t_test_04)
# Krok 1: Wczytanie danych geograficznych krajów z rnaturalearth
world <- ne_countries(scale = 50, returnclass = 'sf')
# Krok 3: Lista krajów do wyświetlenia (bez Rosji)
countries_to_show <- c("Albania", "Austria", "Belarus", "Belgium", "Bulgaria",
"Croatia", "Czechia", "Denmark", "Estonia",
"Finland", "France", "Germany", "Greece", "Hungary", "Iceland",
"Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta",
"Moldova", "Montenegro", "Netherlands", "North Macedonia",
"Norway", "Poland", "Portugal", "Romania", "Serbia", "Russia",
"Serbia and Montenegro", "Slovakia", "Slovenia", "Soviet Union",
"Spain", "Sweden", "Switzerland", "Ukraine", "United Kingdom")
# Krok 4: Filtruj dane, aby tylko wybrane kraje były w zbiorze i dla lat 1980, 1990, 2000, 2010, 2020
data_filtered <- data %>%
filter(Kraj %in% countries_to_show)
# Krok 5: Połącz dane geograficzne z danymi o krajach
world_filtered <- world %>%
filter(name %in% countries_to_show) %>%
left_join(data_filtered, by = c("name" = "Kraj"))
# Znalezienie globalnego zakresu wskaźnika Giniego
global_gini_range <- range(data_filtered$G, na.rm = TRUE)
# Wspólny zakres kolorów
color_limits <- c(global_gini_range[1], global_gini_range[2])
# Generowanie map dla każdego roku
years <- c(2000, 2010, 2020)
plots <- lapply(years, function(year) {
data_year <- data_filtered %>%
filter(Rok == year)
world_year <- world %>%
filter(name %in% countries_to_show) %>%
left_join(data_year, by = c("name" = "Kraj"))
ggplot(world_year) +
geom_sf(aes(fill = G), color = 'black') +
coord_sf(crs = st_crs(3035),
xlim = c(2000000, 6200000),
ylim = c(1500000, 5500000)) +
scale_fill_viridis_c(option = "C", na.value = 'white', limits = color_limits) +
labs(title = paste("Rok", year)) +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank())
})
# Wyświetlanie wykresów obok siebie
plots[[1]] + plots[[2]] + plots[[3]] +
plot_layout(ncol = 3)  +
plot_annotation(
title = "Porównanie nierówności dochodowych wg wskaźnika Giniego",
theme = theme(plot.title = element_text(size = 16, face = "bold", hjust = 0.5))
)
# Filtracja danych dla lat 2000 i 2010
data_changes_1 <- data_filtered %>%
filter(Rok %in% c(2000, 2010)) %>%
group_by(Kraj, Rok) %>%
summarise(G = mean(G, na.rm = TRUE), .groups = "drop") %>% # Średnia Giniego (jeśli są duplikaty)
pivot_wider(names_from = Rok, values_from = G) %>%
rename(Rok_2000 = `2000`, Rok_2010 = `2010`) %>%
mutate(
Zmiana = Rok_2010 - Rok_2000
) %>%
arrange(desc(abs(Zmiana))) %>%      # Sortowanie według największej zmiany bezwzględnej
slice(1:5)                          # Wybór 5 krajów z największą zmianą
# Filtracja danych dla lat 2010 i 2020
data_changes_2 <- data_filtered %>%
filter(Rok %in% c(2010, 2020)) %>%
group_by(Kraj, Rok) %>%
summarise(G = mean(G, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = Rok, values_from = G) %>%
rename(Year_2010 = `2010`, Year_2020 = `2020`) %>%
mutate(
Zmiana = Year_2020 - Year_2010
) %>%
arrange(desc(abs(Zmiana))) %>%
slice(1:5)
# Wyświetlenie tabeli z największymi zmianami
print(data_changes_1)
print(data_changes_2)
# Filtracja danych dla lat 2000 i 2010
data_changes_2000_2010 <- data_filtered %>%
filter(Rok %in% c(2000, 2010)) %>%
group_by(Kraj, Rok) %>%               # Grupa po kraju i roku
summarise(G = mean(G, na.rm = TRUE), .groups = "drop") %>% # Średnia Giniego (jeśli są duplikaty)
pivot_wider(names_from = Rok, values_from = G) %>%         # Pivotowanie danych
rename(Year_2000 = `2000`, Year_2010 = `2010`) %>%         # Zmiana nazw kolumn
mutate(
Change = Year_2010 - Year_2000,    # Obliczenie zmiany
Direction = case_when(
Change > 0 ~ "Wzrost",
Change < 0 ~ "Spadek",
TRUE ~ "Brak zmiany"
)
)
# Obliczenie procentów dla wzrostów i spadków
percent_changes1 <- data_changes_2000_2010 %>%
count(Direction) %>%                  # Liczenie wystąpień każdej kategorii
mutate(Percentage = n / sum(n) * 100) # Obliczenie procentów
# Wyświetlenie wyników
print(percent_changes1)
# Filtracja danych dla lat 2000 i 2010
data_changes_2010_2020 <- data_filtered %>%
filter(Rok %in% c(2010, 2020)) %>%
group_by(Kraj, Rok) %>%               # Grupa po kraju i roku
summarise(G = mean(G, na.rm = TRUE), .groups = "drop") %>% # Średnia Giniego (jeśli są duplikaty)
pivot_wider(names_from = Rok, values_from = G) %>%         # Pivotowanie danych
rename(Year_2010 = `2010`, Year_2020 = `2020`) %>%         # Zmiana nazw kolumn
mutate(
Change = Year_2010 - Year_2020,    # Obliczenie zmiany
Direction = case_when(
Change > 0 ~ "Wzrost",
Change < 0 ~ "Spadek",
TRUE ~ "Brak zmiany"
)
)
# Obliczenie procentów dla wzrostów i spadków
percent_changes2 <- data_changes_2010_2020 %>%
count(Direction) %>%                  # Liczenie wystąpień każdej kategorii
mutate(Percentage = n / sum(n) * 100) # Obliczenie procentów
# Wyświetlenie wyników
print(percent_changes2)
# Krok 1: Wczytanie danych geograficznych krajów z rnaturalearth
world <- ne_countries(scale = 50, returnclass = 'sf')
# Krok 3: Lista krajów do wyświetlenia (bez Rosji)
countries_to_show <- c("Albania", "Austria", "Belarus", "Belgium", "Bulgaria",
"Croatia", "Czechia", "Denmark", "Estonia",
"Finland", "France", "Germany", "Greece", "Hungary", "Iceland",
"Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta",
"Moldova", "Montenegro", "Netherlands", "North Macedonia",
"Norway", "Poland", "Portugal", "Romania", "Serbia", "Russia",
"Serbia and Montenegro", "Slovakia", "Slovenia", "Soviet Union",
"Spain", "Sweden", "Switzerland", "Ukraine", "United Kingdom")
# Krok 4: Filtruj dane, aby tylko wybrane kraje były w zbiorze i dla roku 2000
data_filtered <- data %>%
filter(Kraj %in% countries_to_show) %>%
filter(Rok == 2020)  # Filtruj dane na rok 2000
# Krok 5: Połącz dane geograficzne z danymi o krajach
world_filtered <- world %>%
filter(name %in% countries_to_show) %>%
left_join(data_filtered, by = c("name" = "Kraj"))
# Krok 6: Rysowanie mapy (bez etykiet i bez Rosji)
ggplot(world_filtered) +
geom_sf(aes(fill = PKB), color = 'black') +  # Kolorowanie krajów na podstawie PKB
coord_sf(crs = st_crs(3035),                   # Ustawienie układu współrzędnych
xlim = c(2000000, 6200000),
ylim = c(1500000, 5500000)) +         # Zakres widocznej części mapy
scale_fill_viridis_c(option = "C", na.value = 'white') +
scale_fill_viridis_c(option = "C", na.value = 'white', # Kolor biały dla brakujących danych
name = "Wartość PKB",    # Tytuł legendy
labels = scales::label_comma()) + # Skala kolorów
theme_minimal() +  # Minimalistyczny wygląd
labs(title = "Mapa PKB w krajach Europy w 2020 roku") +
theme(axis.text = element_blank(),   # Usunięcie napisów osi
axis.ticks = element_blank(),  # Usunięcie ticków osi
axis.title = element_blank())  # Usunięcie tytułów osi
# Filtracja danych dla krajów
rich_countries <- c("Luxembourg", "Ireland", "Switzerland", "Norway", "Netherlands", "Denmark", "Austria")
poor_countries <- c("Moldova", "Ukraine", "Belarus", "Bulgaria","North Macedonia", "Russia","Latvia")
# Dane dla bogatych krajów
data_rich <- data %>%
filter(Kraj %in% rich_countries) %>%
group_by(Kraj, Rok) %>%
summarise(PKB_avg = mean(PKB, na.rm = TRUE), .groups = "drop")
# Dane dla biednych krajów
data_poor <- data %>%
filter(Kraj %in% poor_countries) %>%
group_by(Kraj, Rok) %>%
summarise(PKB_avg = mean(PKB, na.rm = TRUE), .groups = "drop")
# Wykres dla bogatych krajów
plot_rich <- ggplot(data_rich, aes(x = Rok, y = PKB_avg, color = Kraj)) +
geom_line(size = 1) +
labs(
title = "PKB w krajach z najwyższym PKB na przestrzeni lat",
x = "Rok",
y = "PKB"
) +
theme_minimal()
# Wykres dla biednych krajów
plot_poor <- ggplot(data_poor, aes(x = Rok, y = PKB_avg, color = Kraj)) +
geom_line(size = 1) +
labs(
title = "PKB w krajach z najniższym PKB na przestrzeni lat",
x = "Rok",
y = "PKB"
) +
theme_minimal()
# Wyświetlenie wykresów obok siebie
library(patchwork)
plot_rich, plot_poor
# Filtracja danych dla krajów
rich_countries <- c("Luxembourg", "Ireland", "Switzerland", "Norway", "Netherlands", "Denmark", "Austria")
poor_countries <- c("Moldova", "Ukraine", "Belarus", "Bulgaria","North Macedonia", "Russia","Latvia")
# Dane dla bogatych krajów
data_rich <- data %>%
filter(Kraj %in% rich_countries) %>%
group_by(Kraj, Rok) %>%
summarise(PKB_avg = mean(PKB, na.rm = TRUE), .groups = "drop")
# Dane dla biednych krajów
data_poor <- data %>%
filter(Kraj %in% poor_countries) %>%
group_by(Kraj, Rok) %>%
summarise(PKB_avg = mean(PKB, na.rm = TRUE), .groups = "drop")
# Wykres dla bogatych krajów
plot_rich <- ggplot(data_rich, aes(x = Rok, y = PKB_avg, color = Kraj)) +
geom_line(size = 1) +
labs(
title = "PKB w krajach z najwyższym PKB na przestrzeni lat",
x = "Rok",
y = "PKB"
) +
theme_minimal()
# Wykres dla biednych krajów
plot_poor <- ggplot(data_poor, aes(x = Rok, y = PKB_avg, color = Kraj)) +
geom_line(size = 1) +
labs(
title = "PKB w krajach z najniższym PKB na przestrzeni lat",
x = "Rok",
y = "PKB"
) +
theme_minimal()
# Wyświetlenie wykresów obok siebie
library(patchwork)
plot_rich +plot_poor
# Filtracja danych dla krajów
rich_countries <- c("Luxembourg", "Ireland", "Switzerland", "Norway", "Netherlands", "Denmark", "Austria")
poor_countries <- c("Moldova", "Ukraine", "Belarus", "Bulgaria","North Macedonia", "Russia","Latvia")
# Dane dla bogatych krajów
data_rich <- data %>%
filter(Kraj %in% rich_countries) %>%
group_by(Kraj, Rok) %>%
summarise(PKB_avg = mean(PKB, na.rm = TRUE), .groups = "drop")
# Dane dla biednych krajów
data_poor <- data %>%
filter(Kraj %in% poor_countries) %>%
group_by(Kraj, Rok) %>%
summarise(PKB_avg = mean(PKB, na.rm = TRUE), .groups = "drop")
# Wykres dla bogatych krajów
plot_rich <- ggplot(data_rich, aes(x = Rok, y = PKB_avg, color = Kraj)) +
geom_line(size = 1) +
labs(
x = "Rok",
y = "PKB"
) +
theme_minimal()
# Wykres dla biednych krajów
plot_poor <- ggplot(data_poor, aes(x = Rok, y = PKB_avg, color = Kraj)) +
geom_line(size = 1) +
labs(
x = "Rok",
y = "PKB"
) +
theme_minimal()
(plot_rich + plot_poor) +
plot_annotation(title = "PKB w krajach z najniższym i najwyższym PKB na przestrzeni lat")
# Filtracja danych dla krajów
rich_countries <- c("Luxembourg", "Ireland", "Switzerland", "Norway", "Netherlands", "Denmark", "Austria")
poor_countries <- c("Moldova", "Ukraine", "Belarus", "Bulgaria","North Macedonia", "Russia","Latvia")
# Dane dla bogatych krajów
data_rich <- data %>%
filter(Kraj %in% rich_countries) %>%
group_by(Kraj, Rok) %>%
summarise(PKB_avg = mean(PKB, na.rm = TRUE), .groups = "drop")
# Dane dla biednych krajów
data_poor <- data %>%
filter(Kraj %in% poor_countries) %>%
group_by(Kraj, Rok) %>%
summarise(PKB_avg = mean(PKB, na.rm = TRUE), .groups = "drop")
# Wykres dla bogatych krajów
plot_rich <- ggplot(data_rich, aes(x = Rok, y = PKB_avg, color = Kraj)) +
geom_line(size = 1) +
labs(
x = "Rok",
y = "PKB"
) +
theme_minimal()
# Wykres dla biednych krajów
plot_poor <- ggplot(data_poor, aes(x = Rok, y = PKB_avg, color = Kraj)) +
geom_line(size = 1) +
labs(
x = "Rok",
y = "PKB"
) +
theme_minimal()
(plot_rich + plot_poor) +
plot_annotation(title = "PKB w krajach z najniższym i najwyższym PKB na przestrzeni lat")
