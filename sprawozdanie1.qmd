---
title: "Sprawozdanie na temat nierówności dochodów w Europie."
author: 
  - name: "Karolina Bakalarz"
    index: "276059"
  - name: "Amelia Bieda"
    index: "275973"
format: pdf
editor: visual
lang: pl
---

# Wstęp

## Cel sprawozdania

Celem niniejszego sprawozdania jest analiza trzech kluczowych zagadnień związanych z poziomem zamożności i nierówności dochodowych w Europie.

Przede wszystkim, badanie ma na celu zrozumienie, w jaki sposób położenie geograficzne krajów w Europie wpływa na ich poziom zamożności, mierzony poprzez PKB.

Zbadamy również wpływ przynależności do Unii Europejskiej na gospodarki krajów, z naciskiem na ewentualne zmiany w poziomie PKB po akcesji do UE.

Ostatecznie sprawdzimy nierówności dochodowe między poszczególnymi państwami europejskimi, poprzez wyniki wskaźnika Gini'ego.

Taka analiza pozwoli nam lepiej zrozumieć sytuację ekonomiczną w Europie, w kontekście zamożności i rozwoju gospodarczego.

## Źródło danych

Dane wykorzystane w analizie pochodzą z najnowszej wersji World Income Inequality Database (WIID), opublikowanej 28 listopada 2023 roku. WIID to największe dostępne źródło danych o nierównościach dochodowych na świecie, udostępniane bezpłatnie na otwartej licencji.

Źródła danych obejmują raporty krajowe i regionalne publikowane przez instytucje statystyczne i rządowe, międzynarodowe bazy danych, takie jak Światowy Bank, OECD i Eurostat, oraz ankiety i badania gospodarstw domowych dotyczące dochodów, konsumpcji i nierówności.

Wszystkie dane są standaryzowane, aby umożliwić porównania między krajami i okresami, co pozwala WIID dostarczać spójne serie czasowe, wskaźniki nierówności oraz pełne rozkłady dochodów na poziomie krajowym i globalnym.

# Opis danych

-   Kraj - określa, do którego europejskiego państwa przynależą dane w badanym wierszu.

-   Skrót - trzycyfrowy kod kraju w formacie ISO 3166-1.

-   G - wskaźnik Giniego, czyli miara koncentracji rozkładu zmiennej losowej, w tym przypadku nierówności dochodowej, określona na przedziale 0-100 (w procentach). Wartość zerowa wspołczynnika wskazuje na pełną równomierność rozkładu.

-   Zasoby - szczegółowy podział zasobów

    -   IDK CZY TO UWZGLĘDNIMY, to narazie bardziej dla nas, w oryginalnych danych mamy podział: "Consumption", "Income, net", "Income, net/gross", "Earnings, gross", "Income, gross", "Market income", "Taxable income, gross", "Taxable income, net", "Earnings, net", "Monetary income, net", "Monetary income, gross", "Factor income", "Monetary income, net (excluding property income)", "Earnings", "Taxable income, excluding property income", "Taxable income, gross (including deductions)".

-   Skala - szczegółowa skala normalizacji(?). ?przeskalowane dochody?

    -   "Per capita", "OECD-modified", "Equivalized", "No adjustment", "Square root", "OECD", NA, "National scale", "1977 McClements scale".

-   Region - grupowanie subregionalne, czyli podział na Europę północną, południową, zachodnią i wschodnią (oparte na geoschemacie Organizacji Narodów Zjednoczonych).

-   G - wskaźnik Giniego, czyli miara koncentracji rozkładu zmiennej losowej, w tym przypadku nierówności dochodowej.

-   UE - status należenia do Unii Europejskiej dla odpowiedniego roku.

-   PKB - wartość produktu krajowego brutto (w dolarach amerykańskich?).

## Wczytanie i przygotowanie danych

-   nadanie odpowiednich nazw zmiennych,

-   zadbanie o odpowiednie typy kolumn,

-   czyszczenie wartości, jeśli zachodzi taka konieczność,

-   dyskusję lub obsługę braków danych;

Z bazy danych WIID będziemy w niniejszym raporcie skupiać się na analizie danych z Europy. Z tego powodu, pozostawiłyśmy wartości dotyczące jedynie analizowanego przez nas kontynentu. Zweryfikowałyśmy typy danych dla każdej kolumny, następnie, dla lepszej czytelności, nazwy kolumn zostały zmienione. Wiersze z brakami danych ("NA") usunęłyśmy, aby uniknąć nieciągłości. W krajach rozwiniętych dane o dochodach są powszechniej stosowane w badaniach, niż dane o wydatkach konsumpcyjnych, stąd zdecydowałyśmy się usunąć zmienną "Consumption" w kategorii "Zasoby".

Po przygotowaniu otrzymałyśmy zbiór około 13 tysięcy wartości w 9 kolumnach. Prezentuje się on następująco:

```{r, echo=FALSE, massage=FALSE}
#| echo: false
#| warning: false
library(tidyverse)

data <- read_csv2("dane_WIID_2023.csv", show_col_types = FALSE) %>%
  filter(region_un == "Europe") %>%
  select(country, c3, year, gini, resource_detailed, scale_detailed, region_un_sub, eu, gdp) %>%
  mutate(across(c(country, c3, resource_detailed, scale_detailed, region_un_sub, eu), as.factor)) %>%
  mutate(across(c(year, gini), as.numeric)) %>%
  filter(resource_detailed != "Consumption") %>%
  filter(if_all(everything(), ~ !is.na(.))) %>%
  filter(scale_detailed == "Per capita") %>%
   mutate(
    gdp = str_remove_all(gdp, " "), # Remove spaces from PKB (gdp)
    gdp = as.numeric(gdp)          # Convert PKB (gdp) to numeric
  ) %>%
  rename(
    Kraj = country,
    Skrót = c3,
    Rok = year,
    G = gini,
    Zasoby = resource_detailed,
    Skala = scale_detailed,
    Region = region_un_sub,
    UE = eu,
    PKB = gdp
  )

```

```{r, echo=FALSE, massage=FALSE}
head(data) 


```

```{r, echo=FALSE, massage=FALSE}
# Ładowanie niezbędnych pakietów
library(tidyverse)
library(e1071)  # Pakiet dla skośności i kurtozy
library(scales)  # Pakiet dla lepszego formatowania liczb

# Obliczanie statystyk opisowych
statystyki_all <- data %>%
  summarise(
    # Statystyki dla PKB
    Średnia_PKB = mean(PKB, na.rm = TRUE),
    Mediana_PKB = median(PKB, na.rm = TRUE),
    Odchylenie_standardowe_PKB = sd(PKB, na.rm = TRUE),
    Min_PKB = min(PKB, na.rm = TRUE),
    Max_PKB = max(PKB, na.rm = TRUE),
    Kwartyla_1_PKB = quantile(PKB, 0.25, na.rm = TRUE),
    Kwartyla_3_PKB = quantile(PKB, 0.75, na.rm = TRUE),
    IQR_PKB = IQR(PKB, na.rm = TRUE),
    Skala_PKB = diff(range(PKB, na.rm = TRUE)),
    Skośność_PKB = skewness(PKB, na.rm = TRUE),
    Kurtosis_PKB = kurtosis(PKB, na.rm = TRUE),
    
    # Statystyki dla Roku
    Średnia_Rok = mean(Rok, na.rm = TRUE),
    Mediana_Rok = median(Rok, na.rm = TRUE),
    Odchylenie_standardowe_Rok = sd(Rok, na.rm = TRUE),
    Min_Rok = min(Rok, na.rm = TRUE),
    Max_Rok = max(Rok, na.rm = TRUE),
    Kwartyla_1_Rok = quantile(Rok, 0.25, na.rm = TRUE),
    Kwartyla_3_Rok = quantile(Rok, 0.75, na.rm = TRUE),
    IQR_Rok = IQR(Rok, na.rm = TRUE),
    Skala_Rok = diff(range(Rok, na.rm = TRUE)),
    Skośność_Rok = skewness(Rok, na.rm = TRUE),
    Kurtosis_Rok = kurtosis(Rok, na.rm = TRUE),
    
    # Statystyki dla Gini
    Średnia_G = mean(G, na.rm = TRUE),
    Mediana_G = median(G, na.rm = TRUE),
    Odchylenie_standardowe_G = sd(G, na.rm = TRUE),
    Min_G = min(G, na.rm = TRUE),
    Max_G = max(G, na.rm = TRUE),
    Kwartyla_1_G = quantile(G, 0.25, na.rm = TRUE),
    Kwartyla_3_G = quantile(G, 0.75, na.rm = TRUE),
    IQR_G = IQR(G, na.rm = TRUE),
    Skala_G = diff(range(G, na.rm = TRUE)),
    Skośność_G = skewness(G, na.rm = TRUE),
    Kurtosis_G = kurtosis(G, na.rm = TRUE)
  ) %>%
  pivot_longer(cols = everything(), 
               names_to = c("Statystyka", "Zmienna"), 
               names_pattern = "(.*)_(.*)", 
               values_to = "Wartość") %>%
  pivot_wider(names_from = "Zmienna", values_from = "Wartość") %>%
  mutate(across(c(PKB, Rok, G), ~ label_number(accuracy = 1)(.)))

# Wyświetlenie wyników w formie tabeli
print(statystyki_all)

```

# Analiza danych

## Jaka jest zależność między położeniem geograficznym w Europie a wysokością PKB i wzrostem gospodarczym państw na przestrzeni lat?

1\. Jaka jest zależność między położeniem geograficznym w Europie a wysokością PKB i wzrostem gospodarczym państw na przestrzeni lat?

Może te akapity będą odpowiedziami na poszczególne pytania badawcze?

-   Dla cech kategorycznych: Analiza rozkładu, testy chi-kwadrat, kontyngencje.

-   Dla cech ciągłych: Analiza korelacji, testy t-studenta, regresja liniowa.

Interpretacja wyników - Opisać wyniki analizy, odnosząc się do postawionych wcześniej pytań badawczych. Logicznie przedstawić wyniki, które prowadzą do odpowiedzi na pytania badawcze.

```{r, echo=FALSE, massage=FALSE}
# Filtracja danych dla roku 2000
data_2000 <- data %>%
  distinct(Kraj, PKB, .keep_all = TRUE) %>%  
  filter(Rok == 2000) %>%
  arrange(PKB) %>%            # Sortowanie według PKB (rosnąco)
  slice_head(n = 15)          # Wybór 15 krajów o najniższym PKB

# Tworzenie wykresu
library(ggplot2)

ggplot(data_2000, aes(x = reorder(Kraj, PKB), y = PKB, fill = Region)) +
  geom_bar(stat = "identity", color = "black") +
  coord_flip() +
  labs(
    title = "15 krajów w Europie z najniższym PKB w 2000 roku",
    x = "Kraj",
    y = "PKB na mieszkańca (USD)"
  ) +
  theme_minimal() +
  scale_fill_brewer(palette = "Paired", name = "Region") +  # Kolory dla regionów
  scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
  theme(
    legend.position = "bottom"  # Przeniesienie legendy na dół
  )




```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Filtracja danych dla roku 2000
data_2000 <- data %>%
  distinct(Kraj, PKB, .keep_all = TRUE) %>%  # Usunięcie duplikatów
  filter(Rok == 2000) %>%
  arrange(desc(PKB)) %>%           # Sortowanie według PKB (malejąco)
  slice_head(n = 15)               # Wybór 15 krajów z najwyższym PKB

# Tworzenie wykresu
ggplot(data_2000, aes(x = reorder(Kraj, PKB), y = PKB, fill = Region)) +
  geom_bar(stat = "identity", color = "black") +
  coord_flip() +
  labs(
    title = "15 krajów w Europie z najwyższym PKB w 2000 roku",
    x = "Kraj",
    y = "PKB na mieszkańca (USD)"
  ) +
  theme_minimal() +
  scale_fill_brewer(palette = "Paired", name = "Region") +  # Kolory dla regionów
  scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
  theme(
    legend.position = "bottom"  # Przeniesienie legendy na dół
  )

```

```{r, echo=FALSE, massage=FALSE}
# Filtracja danych dla roku 2020
data_2020 <- data %>%
  distinct(Kraj, PKB, .keep_all = TRUE) %>%  
  filter(Rok == 2020) %>%
  arrange(PKB) %>%            # Sortowanie według PKB (rosnąco)
  slice_head(n = 15)          # Wybór 15 krajów o najniższym PKB

# Tworzenie wykresu
library(ggplot2)


ggplot(data_2020, aes(x = reorder(Kraj, PKB), y = PKB, fill = Region)) +
  geom_bar(stat = "identity", color = "black") +
  coord_flip() +
  labs(
    title = "15 krajów w Europie z najniższym PKB w 2020 roku",
    x = "Kraj",
    y = "PKB na mieszkańca (USD)"
  ) +
  theme_minimal() +
  scale_fill_brewer(palette = "Paired", name = "Region") +  # Kolory dla regionów
  scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
  theme(
    legend.position = "bottom"  # Przeniesienie legendy na dół
  )


```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Filtracja danych dla roku 2000
data_2020 <- data %>%
  distinct(Kraj, PKB, .keep_all = TRUE) %>%  # Usunięcie duplikatów
  filter(Rok == 2020) %>%
  arrange(desc(PKB)) %>%           # Sortowanie według PKB (malejąco)
  slice_head(n = 15)               # Wybór 15 krajów z najwyższym PKB

# Tworzenie wykresu
ggplot(data_2020, aes(x = reorder(Kraj, PKB), y = PKB, fill = Region)) +
  geom_bar(stat = "identity", color = "black") +
  coord_flip() +
  labs(
    title = "15 krajów w Europie z najwyższym PKB w 2020 roku",
    x = "Kraj",
    y = "PKB na mieszkańca (USD)"
  ) +
  theme_minimal() +
  scale_fill_brewer(palette = "Paired", name = "Region") +  # Kolory dla regionów
  scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
  theme(
    legend.position = "bottom"  # Przeniesienie legendy na dół
  )

```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Biblioteki
library(tidyverse)

# Filtracja danych dla krajów
rich_countries <- c("Luxembourg", "Ireland", "Switzerland", "Norway", "Netherlands", "Denmark", "Austria")
poor_countries <- c("Moldova", "Ukraine", "Belarus", "Bulgaria","North Macedonia", "Russia","Latvia")

# Dane dla bogatych krajów
data_rich <- data %>%
  filter(Kraj %in% rich_countries) %>%
  group_by(Kraj, Rok) %>%
  summarise(PKB_avg = mean(PKB, na.rm = TRUE), .groups = "drop")

# Dane dla biednych krajów
data_poor <- data %>%
  filter(Kraj %in% poor_countries) %>%
  group_by(Kraj, Rok) %>%
  summarise(PKB_avg = mean(PKB, na.rm = TRUE), .groups = "drop")

# Wykres dla bogatych krajów
plot_rich <- ggplot(data_rich, aes(x = Rok, y = PKB_avg, color = Kraj)) +
  geom_line(size = 1) +
  labs(
    title = "PKB od 1958 do 2022 w krajach z najwyższym PKB",
    x = "Rok",
    y = "PKB"
  ) +
  theme_minimal()

# Wykres dla biednych krajów
plot_poor <- ggplot(data_poor, aes(x = Rok, y = PKB_avg, color = Kraj)) +
  geom_line(size = 1) +
  labs(
    title = "PKB od 1958 do 2022 w krajach z najniższym PKB",
    x = "Rok",
    y = "PKB"
  ) +
  theme_minimal()

# Wyświetlenie wykresów obok siebie
library(patchwork)
plot_rich 
plot_poor
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
data_region_year <- data %>%
  group_by(Region, Rok) %>%
  summarise(mean_PKB = mean(PKB), .groups = "drop")  # Średni PKB dla każdego roku i regionu

# Tworzenie wykresu regresji
ggplot(data_region_year, aes(x = Rok, y = mean_PKB, color = Region)) +
  geom_point(size = 2) +  # Punkty danych
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE, size = 1) +  # Linie regresji
  labs(
    title = "Regresja liniowa PKB w Europie w zależności od regionu od 1958 do 2022",
    x = "Rok",
    y = "Wartość PKB"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom")
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Obliczenie średniego PKB dla każdego regionu
avg_pkb_region <- data %>%
  filter(Rok == 2000,Region %in% c("Southern Europe", "Western Europe", "Eastern Europe", "Northern Europe")) %>%
  group_by(Region) %>%
  summarise(Średni_PKB = mean(PKB, na.rm = TRUE)) %>%
  arrange(desc(Średni_PKB))  # Sortowanie w porządku malejącym

# Tworzenie wykresu słupkowego
ggplot(avg_pkb_region, aes(x = reorder(Region, Średni_PKB), y = Średni_PKB, fill = Region)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Średnia wartość PKB w regionach Europy w 2000",
    x = "Region",
    y = "PKB",
    fill = "Region"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Obliczenie średniego PKB dla każdego regionu
avg_pkb_region <- data %>%
  filter(Rok == 2020,Region %in% c("Southern Europe", "Western Europe", "Eastern Europe", "Northern Europe")) %>%
  group_by(Region) %>%
  summarise(Średni_PKB = mean(PKB, na.rm = TRUE)) %>%
  arrange(desc(Średni_PKB))  # Sortowanie w porządku malejącym

# Tworzenie wykresu słupkowego
ggplot(avg_pkb_region, aes(x = reorder(Region, Średni_PKB), y = Średni_PKB, fill = Region)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Średnia wartość PKB w regionach Europy w 2020",
    x = "Region",
    y = "PKB",
    fill = "Region"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
data_2020 <- data %>%
  filter(Rok == 2020)
  
# Wykres boxplot porównujący PKB w różnych regionach w 2020 roku
ggplot(data_2020, aes(x = Region, y = PKB, fill = Region)) +
  geom_boxplot() +
  labs(
    title = "Wykres pudełkowy rozkładu PKB w regionach Europy w 2020 roku",
    x = "Region",
    y = "PKB"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) 
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}

library(ggsignif)# 1. Grupowanie danych i obliczanie średniego PKB dla regionów
data_region_year <- data %>%
  group_by(Region, Rok) %>%
  summarise(mean_PKB = mean(PKB), .groups = "drop")  # Średni PKB dla każdego roku i regionu

# 2. Testy t-Studenta dla porównań między regionami

# Pobranie unikalnych regionów
regions <- unique(data$Region)

# Przygotowanie wyników testów t-Studenta dla wszystkich par regionów
results <- expand.grid(Region1 = regions, Region2 = regions) %>%
  filter(Region1 != Region2) %>%
  rowwise() %>%
  mutate(
    t_test = list(t.test(
      data %>% filter(Region == Region1) %>% pull(PKB),
      data %>% filter(Region == Region2) %>% pull(PKB),
      alternative = "two.sided",
      var.equal = FALSE
    )),
    p_value = t_test$p.value,
    statistic = t_test$statistic
  )

# Dodanie korekty Bonferroniego dla wielokrotnych porównań
results <- results %>%
  mutate(p_adjusted = p.adjust(p_value, method = "bonferroni"))

# 3. Wizualizacja - Wykres pudełkowy z oznaczeniem wyników testów t-Studenta

ggplot(data, aes(x = Region, y = PKB, fill = Region)) +
  geom_boxplot() +
  geom_signif(
    comparisons = list(c("Eastern Europe", "Western Europe"), c("Southern Europe", "Northern Europe")),  # Przykłady regionów
    map_signif_level = TRUE
  ) +
  labs(
    title = "Rozkład PKB w różnych regionach Europy",
    x = "Region",
    y = "PKB per capita"
  ) +
  theme_minimal() +
  theme(legend.position = "none")

ggplot(data_region_year, aes(x = Region, y = mean_PKB, fill = Region)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
   
  labs(
    title = "Średnia wartość PKB per capita w regionach Europy",
    x = "Region",
    y = "Średnia wartość PKB"
  ) +
  theme_minimal()


# 5. Wyświetlenie tabeli wyników testów t-Studenta
results %>%
  select(Region1, Region2, p_value, p_adjusted) %>%
  arrange(p_value)


```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
data_2020 <- data %>%
  filter(Rok == 2000)

# Wykres boxplot porównujący PKB w różnych regionach w 2020 roku
ggplot(data_2020, aes(x = Region, y = PKB, fill = Region)) +
  geom_boxplot() +
  labs(
    title = "Wykres pudełkowy rozkładu PKB w regionach Europy w 2000 roku",
    x = "Region",
    y = "PKB"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) 
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Ładowanie niezbędnych bibliotek
library(rnaturalearth)
library(sf)
library(dplyr)
library(ggplot2)
library(readr)
library(stringr)

# Krok 1: Wczytanie danych geograficznych krajów z rnaturalearth
world <- ne_countries(scale = 50, returnclass = 'sf')

# Krok 3: Lista krajów do wyświetlenia (bez Rosji)
countries_to_show <- c("Albania", "Austria", "Belarus", "Belgium", "Bulgaria", 
                       "Croatia", "Czechia", "Denmark", "Estonia", 
                       "Finland", "France", "Germany", "Greece", "Hungary", "Iceland", 
                       "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", 
                       "Moldova", "Montenegro", "Netherlands", "North Macedonia", 
                       "Norway", "Poland", "Portugal", "Romania", "Serbia", "Russia",
                       "Serbia and Montenegro", "Slovakia", "Slovenia", "Soviet Union", 
                       "Spain", "Sweden", "Switzerland", "Ukraine", "United Kingdom")

# Krok 4: Filtruj dane, aby tylko wybrane kraje były w zbiorze i dla roku 2000
data_filtered <- data %>%
  filter(Kraj %in% countries_to_show) %>%
  filter(Rok == 2020)  # Filtruj dane na rok 2000

# Krok 5: Połącz dane geograficzne z danymi o krajach
world_filtered <- world %>%
  filter(name %in% countries_to_show) %>%
  left_join(data_filtered, by = c("name" = "Kraj"))

# Krok 6: Rysowanie mapy (bez etykiet i bez Rosji)
ggplot(world_filtered) + 
  geom_sf(aes(fill = PKB), color = 'black') +  # Kolorowanie krajów na podstawie PKB
  coord_sf(crs = st_crs(3035),                   # Ustawienie układu współrzędnych
           xlim = c(2000000, 6200000), 
           ylim = c(1500000, 5500000)) +         # Zakres widocznej części mapy
    scale_fill_viridis_c(option = "C", na.value = 'white') +
    scale_fill_viridis_c(option = "C", na.value = 'white', # Kolor biały dla brakujących danych
                        name = "Wartość PKB",    # Tytuł legendy
                        labels = scales::label_comma()) + # Skala kolorów  # Skala kolorów
  theme_minimal() +  # Minimalistyczny wygląd
  labs(title = "Mapa PKB w krajach Europy w 2020 roku)") +
  theme(axis.text = element_blank(),   # Usunięcie napisów osi
        axis.ticks = element_blank(),  # Usunięcie ticków osi
        axis.title = element_blank())  # Usunięcie tytułów osi




```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Ładowanie niezbędnych bibliotek
library(rnaturalearth)
library(sf)
library(dplyr)
library(ggplot2)
library(readr)
library(stringr)

# Krok 1: Wczytanie danych geograficznych krajów z rnaturalearth
world <- ne_countries(scale = 50, returnclass = 'sf')

# Krok 3: Lista krajów do wyświetlenia (bez Rosji)
countries_to_show <- c("Albania", "Austria", "Belarus", "Belgium", "Bulgaria", 
                       "Croatia", "Czechia", "Denmark", "Estonia", 
                       "Finland", "France", "Germany", "Greece", "Hungary", "Iceland", 
                       "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", 
                       "Moldova", "Montenegro", "Netherlands", "North Macedonia", 
                       "Norway", "Poland", "Portugal", "Romania", "Serbia", "Russia",
                       "Serbia and Montenegro", "Slovakia", "Slovenia", "Soviet Union", 
                       "Spain", "Sweden", "Switzerland", "Ukraine", "United Kingdom")

# Krok 4: Filtruj dane, aby tylko wybrane kraje były w zbiorze i dla roku 2000
data_filtered <- data %>%
  filter(Kraj %in% countries_to_show) %>%
  filter(Rok == 2000)  # Filtruj dane na rok 2000

# Krok 5: Połącz dane geograficzne z danymi o krajach
world_filtered <- world %>%
  filter(name %in% countries_to_show) %>%
  left_join(data_filtered, by = c("name" = "Kraj"))

# Krok 6: Rysowanie mapy (bez etykiet i bez Rosji)
ggplot(world_filtered) + 
  geom_sf(aes(fill = PKB), color = 'black') +  # Kolorowanie krajów na podstawie PKB
  coord_sf(crs = st_crs(3035),                   # Ustawienie układu współrzędnych
           xlim = c(2000000, 6200000), 
           ylim = c(1500000, 5500000)) +         # Zakres widocznej części mapy
  scale_fill_viridis_c(option = "C", na.value = 'white') +
    scale_fill_viridis_c(option = "C", na.value = 'white', # Kolor biały dla brakujących danych
                        name = "Wartość PKB",    # Tytuł legendy
                        labels = scales::label_comma()) + # Skala kolorów
  theme_minimal() +  # Minimalistyczny wygląd
  labs(title = "Mapa PKB w krajach Europy w 2000 roku)",
       subtitle = "PKB") +
  theme(axis.text = element_blank(),   # Usunięcie napisów osi
        axis.ticks = element_blank(),  # Usunięcie ticków osi
        axis.title = element_blank())  # Usunięcie tytułów osi



```

## Akapit

2\. Czy dołączenie do UE miało wpływ na zmianę GDP?

## Akapit

3\. Zbadanie współczynnika nierówności dochodowej w Europie.

## Wnioski

Na końcu tej sekcji przedstaw wnioski związane z odpowiedziami na pytania badawcze, np. "Z analizy wynika, że istnieje silna korelacja między PKB a poziomem nierówności dochodowych."

# Podsumowanie

Przypomnienie najważniejszych wniosków z analizy.

# Dyskusja

Myślę, że to bardzo fajny dodatkowy akapit, który warto uwzględnić na lepsze punkciki :)

-   **Ograniczenia**: Omówienie wszelkiech ograniczeń analizy, np. problem z jakością danych, brakującymi wartościami, czy ograniczonym zakresem badanych zmiennych.

-   **Propozycje przyszłych badań**: Zasugerowanie, co można by zbadać w przyszłości, aby poszerzyć lub pogłębić wyniki.
